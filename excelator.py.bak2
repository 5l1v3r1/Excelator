#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Mar 07, 2019 11:03:08 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import excelator_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = _Excel_ator (root)
    excelator_support.init(root, top)
    root.mainloop()

w = None
def create__Excel_ator(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = _Excel_ator (w)
    excelator_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy__Excel_ator():
    global w
    w.destroy()
    w = None


class _Excel_ator:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1227x815+330+122")
        top.title("'Excel'ator")
        top.configure(background="#cdd886")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.path = ttk.Entry(top)
        self.path.place(relx=0.1, rely=0.06, relheight=0.03, relwidth=0.2)
        self.path.configure(takefocus="")
        self.path.configure(cursor="ibeam")

        self.Label1 = Label(top)
        self.Label1.place(relx=0.01, rely=0.06, height=23, width=102)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#cdd886")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Enter File Path''')

        self.loadworkbook = ttk.Button(top)
        self.loadworkbook.place(relx=0.11, rely=0.12, height=47, width=152)
        self.loadworkbook.configure(command=excelator_support.loadexcel)
        self.loadworkbook.configure(takefocus="")
        self.loadworkbook.configure(text='''Load Workbook''')

        self.TLabel2 = ttk.Label(top)
        self.TLabel2.place(relx=0.02, rely=0.93, height=41, width=1135)
        self.TLabel2.configure(background="#cdd886")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief=FLAT)
        self.TLabel2.configure(text='''Unloaded''')
        self.TLabel2.configure(width=1135)

        self.TLabel3 = ttk.Label(top)
        self.TLabel3.place(relx=0.03, rely=0.22, height=21, width=112)
        self.TLabel3.configure(background="#cdd886")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="TkDefaultFont")
        self.TLabel3.configure(relief=FLAT)
        self.TLabel3.configure(text='''Search for Value''')

        self.TEntry1 = ttk.Entry(top)
        self.TEntry1.place(relx=0.02, rely=0.27, relheight=0.03, relwidth=0.14)
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="ibeam")

        self.getentirerow = ttk.Button(top)
        self.getentirerow.place(relx=0.03, rely=0.32, height=27, width=109)
        self.getentirerow.configure(command=excelator_support.getfullrow)
        self.getentirerow.configure(takefocus="")
        self.getentirerow.configure(text='''Get Entire Row''')

        self.Label2 = Label(top)
        self.Label2.place(relx=0.04, rely=0.36, height=33, width=71)
        self.Label2.configure(background="#cdd886")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''OR''')
        self.Label2.configure(width=71)

        self.cols = ttk.Entry(top)
        self.cols.place(relx=0.02, rely=0.4, relheight=0.03, relwidth=0.14)
        self.cols.configure(takefocus="")
        self.cols.configure(cursor="ibeam")

        self.TButton2 = ttk.Button(top)
        self.TButton2.place(relx=0.02, rely=0.45, height=27, width=160)
        self.TButton2.configure(command=excelator_support.getspecifiedcols)
        self.TButton2.configure(takefocus="")
        self.TButton2.configure(text='''Get Specified Columns''')

        self.TLabel4 = ttk.Label(top)
        self.TLabel4.place(relx=0.29, rely=0.22, height=21, width=85)
        self.TLabel4.configure(background="#cdd886")
        self.TLabel4.configure(foreground="#000000")
        self.TLabel4.configure(font="TkDefaultFont")
        self.TLabel4.configure(relief=FLAT)
        self.TLabel4.configure(text='''Modify Value''')

        self.TLabel5 = ttk.Label(top)
        self.TLabel5.place(relx=0.21, rely=0.27, height=21, width=27)
        self.TLabel5.configure(background="#cdd886")
        self.TLabel5.configure(foreground="#000000")
        self.TLabel5.configure(font="TkDefaultFont")
        self.TLabel5.configure(relief=FLAT)
        self.TLabel5.configure(text='''old:''')

        self.old = ttk.Entry(top)
        self.old.place(relx=0.24, rely=0.27, relheight=0.03, relwidth=0.15)
        self.old.configure(width=186)
        self.old.configure(takefocus="")
        self.old.configure(cursor="ibeam")

        self.TLabel6 = ttk.Label(top)
        self.TLabel6.place(relx=0.2, rely=0.32, height=21, width=35)
        self.TLabel6.configure(background="#cdd886")
        self.TLabel6.configure(foreground="#000000")
        self.TLabel6.configure(font="TkDefaultFont")
        self.TLabel6.configure(relief=FLAT)
        self.TLabel6.configure(text='''new:''')

        self.new = ttk.Entry(top)
        self.new.place(relx=0.24, rely=0.32, relheight=0.03, relwidth=0.15)
        self.new.configure(width=186)
        self.new.configure(takefocus="")
        self.new.configure(cursor="ibeam")

        self.TButton3 = ttk.Button(top)
        self.TButton3.place(relx=0.26, rely=0.37, height=37, width=118)
        self.TButton3.configure(command=excelator_support.modifyvalue)
        self.TButton3.configure(takefocus="")
        self.TButton3.configure(text='''Modify''')
        self.TButton3.configure(width=118)

        self.TButton4 = ttk.Button(top)
        self.TButton4.place(relx=0.35, rely=0.04, height=57, width=168)
        self.TButton4.configure(command=excelator_support.reverse_cols)
        self.TButton4.configure(takefocus="")
        self.TButton4.configure(text='''Reverse Columns''')
        self.TButton4.configure(width=168)






if __name__ == '__main__':
    vp_start_gui()


